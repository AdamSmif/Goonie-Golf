[gd_scene load_steps=3 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 lightest : hint_color;
uniform vec4 light : hint_color;
uniform vec4 dark : hint_color;
uniform vec4 darkest : hint_color;


void fragment() {
	COLOR = texture(SCREEN_TEXTURE, SCREEN_UV);
	float rgb_avg = (COLOR.r + COLOR.g + COLOR.b) / 3.0;
	if (rgb_avg < .25) {
		COLOR = darkest;
	} else if (rgb_avg < .5) {
		COLOR = dark;
	} else if (rgb_avg < .75) {
		COLOR = light;
	} else {
		COLOR = lightest;
	}
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/lightest = Color( 0.607843, 0.737255, 0.0588235, 1 )
shader_param/light = Color( 0.545098, 0.67451, 0.0588235, 1 )
shader_param/dark = Color( 0.0588235, 0.219608, 0.0588235, 1 )
shader_param/darkest = Color( 0.0627451, 0.133333, 0.0313726, 1 )

[node name="4ColorPaletteSwapper" type="ColorRect"]
material = SubResource( 2 )
margin_left = -259.0
margin_top = -102.0
margin_right = 1149.0
margin_bottom = 675.0
color = Color( 0.555725, 0.625, 0.0708008, 1 )
__meta__ = {
"_edit_use_anchors_": false
}
